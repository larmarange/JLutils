% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcoef_model.R
\name{ggcoef_model}
\alias{ggcoef_model}
\alias{ggcoef_compare}
\alias{ggcoef_multinom}
\alias{ggcoef_data}
\alias{ggcoef_plot}
\title{Plot model coefficients}
\usage{
ggcoef_model(
  x,
  label = NULL,
  exponentiate = FALSE,
  include = dplyr::everything(),
  show_single_row = NULL,
  conf.level = 0.95,
  intercept = FALSE,
  significance = 0.05,
  return_data = FALSE,
  ...
)

ggcoef_compare(
  mods,
  type = c("dodged", "faceted"),
  label = NULL,
  exponentiate = FALSE,
  include = NULL,
  show_single_row = NULL,
  conf.level = 0.95,
  intercept = FALSE,
  significance = 0.05,
  return_data = FALSE,
  ...
)

ggcoef_multinom(
  x,
  type = c("dodged", "faceted"),
  y.level_label = NULL,
  label = NULL,
  exponentiate = TRUE,
  include = dplyr::everything(),
  show_single_row = NULL,
  conf.level = 0.95,
  intercept = FALSE,
  significance = 0.05,
  return_data = FALSE,
  ...
)

ggcoef_data(
  x,
  label = NULL,
  exponentiate = FALSE,
  include = dplyr::everything(),
  show_single_row = NULL,
  conf.level = 0.95,
  intercept = FALSE,
  significance = 0.05
)

ggcoef_plot(
  data,
  exponentiate = FALSE,
  point_size = 2,
  point_stroke = 2,
  point_fill = "white",
  colour = NULL,
  colour_guide = TRUE,
  colour_lab = "",
  shape = "significance",
  shape_values = c(16, 21),
  shape_guide = TRUE,
  shape_lab = "",
  errorbar = TRUE,
  errorbar_height = 0.1,
  errorbar_coloured = FALSE,
  stripped_rows = TRUE,
  strips_odd = "#11111111",
  strips_even = "#00000000",
  vline = TRUE,
  dodged = FALSE,
  dodged_width = 0.8,
  facet_col = NULL
)
}
\arguments{
\item{x}{a regression model object}

\item{label}{list of formulas specifying variables labels, e.g. \code{list(age ~ "Age, yrs", stage ~ "Path T Stage")}}

\item{exponentiate}{if \code{TRUE} a logarithmic scale will be used for x-axis}

\item{include}{variables to include in output, may be a vector of quoted variable names, unquoted variable names, or tidyselect select helper functions}

\item{show_single_row}{by default categorical variables are printed on multiple rows. If a variable is dichotomous (e.g. Yes/No) and you wish to print the regression coefficient on a single row, include the variable name(s) hereâ€“quoted and unquoted variable name accepted}

\item{conf.level}{confidence level (between 0 and 4) for confidence intervals, default to .95, \code{NULL} to not display confidence intervals}

\item{intercept}{if \code{TRUE}, include the intercept in the output}

\item{significance}{level (between 0 and 1) below which a coefficient is consider to be significantly different from 0 (or 1 if \code{exponentiate = TRUE}), \code{NULL} for not highlighting such coefficients}

\item{return_data}{if \code{TRUE}, will return the data.frame used for plotting instead of the plot}

\item{...}{parameters passed to \code{\link[=ggcoef_plot]{ggcoef_plot()}}}

\item{mods}{named list of models}

\item{type}{a dodged plot or a facetted plot?}

\item{y.level_label}{an optional named vector for labelling \code{y.level} (see examples)}

\item{data}{a data frame containing data to be plotted, typically the output of \code{\link[=ggcoef_data]{ggcoef_data()}}}

\item{point_size}{size of the points}

\item{point_stroke}{thickness of the points}

\item{point_fill}{fill colour for the points}

\item{colour}{optional variable name to be mapped to colour aesthetic}

\item{colour_guide}{should colour guide be displayed in the legend?}

\item{colour_lab}{label of the colour aesthetic in the legend}

\item{shape}{optional variable name to be mapped to the shape aesthetic}

\item{shape_values}{values of the different shapes to use in \code{\link[ggplot2:scale_shape_manual]{ggplot2::scale_shape_manual()}}}

\item{shape_guide}{should shape guide be displayed in the legend?}

\item{shape_lab}{label of the shape aesthetic in the legend}

\item{errorbar}{should error bars be plotted?}

\item{errorbar_height}{height of error bars}

\item{errorbar_coloured}{should error bars be coloured as the points?}

\item{stripped_rows}{should stripped rows be displayed in the background?}

\item{strips_odd}{color of the odd rows}

\item{strips_even}{color of the even rows}

\item{vline}{should a vertical line de drawn at 0 (or 1 if \code{exponentiate = TRUE})?}

\item{dodged}{should points be dodged (according to the colour aesthetic)?}

\item{dodged_width}{width value for \code{\link[ggplot2:position_dodge]{ggplot2::position_dodge()}}}

\item{facet_col}{optional variable name to be used for column facets}
}
\description{
Experimental redesign of \code{\link[GGally:ggcoef]{GGally::ggcoef()}} using \code{\link[gtsummary:tbl_regression]{gtsummary::tbl_regression()}}.
Use wit caution, syntax is subject to change.

\code{\link[=ggcoef_multinom]{ggcoef_multinom()}} is a variation of \code{\link[=ggcoef_model]{ggcoef_model()}} adapted to multinomial
logistic regressions performed with \code{\link[nnet:multinom]{nnet::multinom()}}.
\code{\link[=ggcoef_multinom]{ggcoef_multinom()}} works only with the dev version of \code{gtsummary}.
}
\examples{
data(trial, package = "gtsummary")
trial$high_marker <- factor(trial$marker > 1, label = c("low", "high"))
attr(trial$high_marker, "label") <- "Marker level"
mod <- glm(response ~ age + stage + grade + high_marker, trial, family = binomial(link = "logit"))
ggcoef_model(mod)
ggcoef_model(mod, exponentiate = TRUE)
ggcoef_model(mod, exponentiate = TRUE, label = c(age = "Age in years", stage = "Stage of the disease"))
ggcoef_model(mod, exponentiate = TRUE, show_single_row = "high_marker", intercept = TRUE)
ggcoef_model(mod, exponentiate = TRUE, include = c("stage", "age"))
ggcoef_model(mod, exponentiate = TRUE, colour = NULL, stripped_rows = FALSE, significance = NULL)
ggcoef_model(mod, exponentiate = TRUE, conf.level = NULL)

mod <- glm(response ~ stage:age + grade:stage, trial, family = binomial(link = "logit"))
ggcoef_model(mod, exponentiate = TRUE)

if (require(survival)) {
  test <- list(time = c(4,3,1,1,2,2,3), 
                status = c(1,1,1,0,1,1,0), 
                x = c(0,2,1,1,1,0,0), 
                sex = c("f", "f", "f", "f", "m", "m", "m")) 
  mod <- coxph(Surv(time, status) ~ x + sex, test)
  ggcoef_model(mod, exponentiate = TRUE)
}

# Comparison of several models
mod1 <- glm(response ~ age + stage + grade + high_marker, trial, family = binomial())
mod2 <- step(mod1, trace = 0)
mod3 <- glm(response ~ high_marker * stage, trial, family = binomial())
mods <- list("Full model" = mod1, "Simplified model" = mod2, "With interaction" = mod3)

ggcoef_compare(mods, exponentiate = TRUE)
ggcoef_compare(mods, exponentiate = TRUE, type = "faceted")

# you can reverse the vertical position of the point by using a negative value
# for dodged_width (but it will produce some warnings)
\dontrun{
  ggcoef_compare(mods, exponentiate = TRUE, dodged_width = -.9)
}

# specific function for multinom models
data(tips, package = "reshape")
library(nnet)
mod <- multinom(day ~ ., data = tips)
ggcoef_multinom(mod)
ggcoef_multinom(mod, y.level = c(Thur = "Thursday", Sat = "Saturday", Sun = "Sunday"))
}
